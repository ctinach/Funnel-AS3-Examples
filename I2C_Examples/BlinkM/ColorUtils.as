package  {		public class ColorUtils {				// static methods (aka class methods)				// return the hex value for the specified RGB value		public static function rgb2hex(r:Number, g:Number, b:Number):uint {			// << is a bit shift operator			// if r = 255, then in hex r = 0xFF;			// if we shift 0xFF left 16 bits then we have 0xFF0000;			// the | operator combines the values of 2 variables			// so if g = 128, then g<<8 = 0x80 and r<<16 | g<<8 = 0xFF8000;    		return(r<<16 | g<<8 | b);		}				// return the RGB value for the specified hex value		public static function hex2rgb(hex:uint):Array {			var colorArray:Array = new Array();			// shift variable 16 bits to the right			var red:uint = hex>>16;			// shift variable 8 bits to the right, force upper 16 bits to 0 and mask lower 8 bits			var green:uint = (hex>>8) & 0x0000FF;			// force upper 16 bits to 0 and mask lower 8 bits			var blue:uint = hex & 0x0000FF;						colorArray[0] = red;			colorArray[1] = green;			colorArray[2] = blue;						return colorArray;			}			}}