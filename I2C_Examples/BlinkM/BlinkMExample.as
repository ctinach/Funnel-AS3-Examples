package {		import flash.events.MouseEvent;	import flash.display.MovieClip;	import flash.sampler.Sample;	import flash.display.Sprite;	import flash.geom.Rectangle;		import funnel.*;	import funnel.i2c.*;		public class BlinkMExample extends MovieClip {				private var arduino:Arduino;		private var blinkM:BlinkM;				private var resetBtn:ColorButton;		private var buttonPanel:Sprite;			public function BlinkMExample() {			var config:Configuration = Arduino.FIRMATA;			arduino = new Arduino(config);						arduino.addEventListener(FunnelEvent.READY, onReady);						// create a button to use to reset the random color button grid			resetBtn = new ColorButton(0xCCCCCC, "reset");			resetBtn.x = 10;			resetBtn.y = 350;			this.addChild(resetBtn);			resetBtn.addEventListener(MouseEvent.CLICK, onResetClick);						createButtonGrid();		}				private function onReady(evt:FunnelEvent):void {			arduino.removeEventListener(FunnelEvent.READY, onReady);						blinkM = new BlinkM(arduino);						// stop the current blinkM script			blinkM.stopScript();				}				private function createButtonGrid():void {						// create an empty Sprite object to use as a container			// this allows us to more easily position the grid of buttons we create later			// since we can simply move the panel to move the individual buttons			buttonPanel = new Sprite();			buttonPanel.x = buttonPanel.y = 10;			this.addChild(buttonPanel);						// create some padding around the buttons			var gutter:uint = 10;			var rowSpacing:uint = 10;						// create a nested for loop to create a grid of buttons			// for each outer loop (1 row), 4 columns are created by the inner loop			for (var row:uint=0; row<3; row++) {				for (var col:uint=0; col<4; col++) {					var btn = new ColorButton(randomColor());					btn.width = btn.height = 100;					btn.x = col * (btn.width + gutter);					btn.y = row * (btn.height + rowSpacing);					this.addEventListener(MouseEvent.CLICK, onBtnClick);										buttonPanel.addChild(btn);				}			}					}				private function randomColor():uint {			var red:Number = Math.floor(Math.random() * 255);			var green:Number = Math.floor(Math.random() * 255);			var blue:Number = Math.floor(Math.random() * 255);						// get the hex value of the RGB color			return ColorUtils.rgb2hex(red, green, blue);		}						private function onBtnClick(evt:MouseEvent):void {			// get the RGB values for the hex color			var colorArray:Array = ColorUtils.hex2rgb(evt.target.color);			var red:uint = colorArray[0];			var green:uint = colorArray[1];			var blue:uint = colorArray[2];						// fade to the color of the selected square			blinkM.goToRGBColorNow([red, green, blue]);		}				private function onResetClick(evt:MouseEvent):void {			// get a count of the number of child objects of the panelButton			var childCount:uint = buttonPanel.numChildren;						// use getChildAt() to get a reference to each child of the buttonPanel			// assign a new random color to each object			for (var i:uint = 0; i < childCount; i++) {				(buttonPanel.getChildAt(i) as ColorButton).color = randomColor();			}		}	}}